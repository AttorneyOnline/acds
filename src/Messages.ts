/* tslint:disable */
/**
* This file was automatically generated by json-schema-to-typescript.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run json-schema-to-typescript to regenerate this file.
*/

export type Msg = AssetList | Chars | InfoBasic | JoinRoom | JoinServer 
  | OOC | Opts | SetOpt;

export interface AssetList {
  id: "asset-list";
  repositories: string[];
  assets: string[];
}

export interface Chars {
  id: "chars";
  characters: {
    asset: string;
    protection: "open" | "used" | "protected";
  }[];
  custom_allowed: boolean;
}

export interface InfoBasic {
  id: "info-basic";
  /**
   * Name of the server
   */
  name: string;
  /**
   * Server implementation version
   */
  version: string;
  /**
   * Number of players currently connected
   */
  player_count: number;
  /**
   * Maximum permissible number of players
   */
  max_players: number;
  protection: "open" | "password" | "spectate" | "closed";
  /**
   * Server description
   */
  desc: string;
  /**
   * Buffer representation of the authentication challenge. Passed even when there is no password.
   */
  auth_challenge: {
    [k: string]: any;
  };
  rooms: {
    name: string;
    players: number;
    desc?: string | null;
    protection: "open" | "spectate" | "closed";
  }[];
}

export interface JoinRoom {
  id: "join-room";
  result: "success" | "full" | "denied";
}

export interface JoinServer {
  id: "join-server";
  result: "success" | "full" | "password" | "banned" | "other";
  message?: string;
}

export interface OOC {
  id: "ooc";
  message: string;
  player?: string;
}

export interface Opts {
  id: "opts";
  options: {
    [k: string]: any;
  };
}

export interface SetOpt {
  id: "set-opt";
  result: "success" | "error";
  message?: string;
}

